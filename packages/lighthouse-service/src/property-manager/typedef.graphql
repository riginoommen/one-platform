scalar DateTime

type PropertyAppType {
  id: ID
  name: String
  branch: String
}

input PropertyAppInput {
  name: String!
  branch: String!
}

input PropertyInput {
  name: String!
  description: String
  projectId: String!
  apps: [PropertyAppInput!]
  createdBy: String
  updatedBy: String
}

type PropertyUserProfileType {
  cn: String
  uid: String
  rhatUUID: String
  mail: String
}


type PropertyType {
  id: ID
  name: String
  description: String
  projectId: String
  apps: [PropertyAppType!]
  createdBy: PropertyUserProfileType
  createdOn: DateTime
  updatedBy: PropertyUserProfileType
  updatedOn: DateTime
}

type Query {
  """
  List all the properties
  """
  listLHProperties(
    limit: Int
    offset: Int
    search: String
    user: String
  ): [PropertyType]
  """
  List property based on id
  """
  listLHProperty(id: ID!): PropertyType
}

type Mutation {
  """
  Create a new property
  """
  createLHProperty(property: PropertyInput!): PropertyType
  """
  Update a property
  """
  updateLHProperty(id: ID!, data: PropertyInput): PropertyType
  """
  Delete a property
  """
  deleteLHProperty(id: ID!): PropertyType
  """
  Add an app to a property
  """
  createLHApp(propertyId: ID!, appData: PropertyAppInput!): PropertyType
  """
  Update an app from a property
  """
  updateLHApp(appId: ID!, appData: PropertyAppInput!): PropertyType
  """
  Delete an app from a property
  """
  deleteLHApp(appId: ID!): PropertyType
}
